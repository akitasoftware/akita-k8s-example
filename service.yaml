# TODO: extract the secret declaration from file before code is made public
apiVersion: v1
kind: Secret
metadata:
  name: akita-secrets
type: Opaque
data:
  api-key-id: YXBrXzNSb1RxeFcxN0lDTUl6Smh0YzRnYmU=
  api-key-secret: OTQ0YjdmNDQyMTliMjkzMGNjMWM5YjEyNGNhYTM3YmY2NDA4YjE2YWFjNDFiYTYzMjkyNjkxMzIzNmE1NmM1ZQ==
---
apiVersion: v1
kind: Service
metadata:
  name: akita-sidecar-example
spec:
  type: NodePort
  selector:
    app: akita-pod
  ports:
    - protocol: TCP
      port: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-with-sidecar
  labels:
    app: akita-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akita-pod
  template:
    metadata:
      labels:
        app: akita-pod
    spec:
      containers:
      - name: app
        image: bfwaterdog/todo-service-example
        ports:
        - containerPort: 5000
      - name: akita
        image: akitasoftware/cli:latest
        lifecycle:
          # Pre-stop hooks: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution
          preStop:
            exec:
              command: ["/bin/sh", "-c", "AKITA_PID=$(pgrep akita) && kill -2 $AKITA_PID && tail -f /proc/$AKITA_PID/fd/1"]
        env:
          - name: AKITA_API_KEY_ID
            valueFrom:
              secretKeyRef:
                name: akita-secrets
                key: api-key-id
          - name: AKITA_API_KEY_SECRET
            valueFrom:
              secretKeyRef:
                name: akita-secrets
                key: api-key-secret
        args:
          - learn
          - --filter
          - port 5000
          - --service
          - k8s-integration
---
apiVersion: v1
kind: Service
metadata:
  name: statistics-service
spec:
  type: NodePort
  selector:
    app: statistics-service-deployment
  ports:
    - protocol: TCP
      port: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statistics-service-deployment
  labels:
    app: statistics-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: statistics-service-deployment
  template:
    metadata:
      labels:
        app: statistics-service-deployment
    spec:
      containers:
      - name: app
        image: bfwaterdog/statistics-service-example
        ports:
        - containerPort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  selector:
    app: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2.3-alpine
        ports:
        - containerPort: 6379
          name: client
